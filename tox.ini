[tox]
minversion = 1.8
skipsdist = True
envlist = py3,py27,pep8

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         PYTHONDONTWRITEBYTECODE = 1
         LANGUAGE=en_US
         LC_ALL=en_US.UTF-8
         PYTHONWARNINGS=default::DeprecationWarning
         TESTS_DIR=./ironic/tests/unit/
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
    stestr run --concurrency=16 {posargs}
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:unit-with-driver-libs]
basepython = python2
deps = {[testenv]deps}
    -r{toxinidir}/driver-requirements.txt

[testenv:genstates]
basepython = python3
deps = {[testenv]deps}
    pydot2
commands = {toxinidir}/tools/states_to_dot.py -f {toxinidir}/doc/source/images/states.svg --format svg

[testenv:pep8]
basepython = python3
whitelist_externals = bash
commands =
  bash tools/flake8wrap.sh {posargs}
  # Run bashate during pep8 runs to ensure violations are caught by
  # the check and gate queues.
  {toxinidir}/tools/run_bashate.sh {toxinidir}
  # Check the *.rst files
  doc8 README.rst CONTRIBUTING.rst doc/source --ignore D001
  # Check to make sure reno releasenotes created with 'reno new'
  {toxinidir}/tools/check-releasenotes.py

[testenv:cover]
basepython = python3
setenv = VIRTUAL_ENV={envdir}
         LANGUAGE=en_US
         PYTHON=coverage run --source ironic --omit='*tests*' --parallel-mode
commands =
  coverage erase
  stestr run {posargs}
  coverage combine
  coverage report --omit='*tests*'
  coverage html -d ./cover --omit='*tests*'

[testenv:checkconfig]
basepython = python3
sitepackages = False
envdir = {toxworkdir}/venv
commands =
  {toxinidir}/tools/config/check_uptodate.sh

[testenv:genconfig]
basepython = python3
sitepackages = False
envdir = {toxworkdir}/venv
commands =
  oslo-config-generator --config-file=tools/config/ironic-config-generator.conf

[testenv:genpolicy]
basepython = python3
sitepackages = False
envdir = {toxworkdir}/venv
commands =
  oslopolicy-sample-generator --config-file=tools/policy/ironic-policy-generator.conf

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t ironic/tests/unit {posargs}

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:api-ref]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
whitelist_externals = bash
commands =
  bash -c 'rm -rf api-ref/build'
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:releasenotes]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:venv]
basepython = python3
setenv = PYTHONHASHSEED=0
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = {posargs}

[flake8]
# [W503] Line break before binary operator.
# NOTE(TheJulia): Adding W606 to the ignore list
# until we are able to remove them due to deprecation
# period passing. Patch merged in March 2018 to rename
# method arguments from reserved keywords.
ignore = E129,W503,W606
filename = *.py,app.wsgi
exclude =  .venv,.git,.tox,dist,doc,*lib/python*,*egg,build
import-order-style = pep8
application-import-names = ironic
max-complexity=18
# [H106] Don't put vim configuration in source files.
# [H203] Use assertIs(Not)None to check for None.
# [H204] Use assert(Not)Equal to check for equality.
# [H205] Use assert(Greater|Less)(Equal) for comparison.
# [H904] Delay string interpolations at logging calls.
enable-extensions=H106,H203,H204,H205,H904

[hacking]
local-check-factory = ironic.hacking.checks.factory
import_exceptions = testtools.matchers, ironic.common.i18n

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
